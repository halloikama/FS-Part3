{"version":3,"sources":["services/persons.js","components/NameList.js","components/PersonForm.js","components/Filter.js","components/Notification.js","App.js","serviceWorker.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","object","delete","id","put","Button","onClick","person","text","persons","NameList","handleDeleButton","map","key","name","number","PersonForm","addPerson","useState","newName","setNewName","newNumber","setNewNumber","onSubmit","event","value","onChange","target","type","Filter","onFilterChange","newFilterName","setFilterName","console","log","newPersons","filter","toLocaleLowerCase","includes","Notification","message","style","className","App","setPersons","personsToShow","setPersonsToShow","errorMessage","setErrorMessage","notificationStyle","setNotificationStyle","useEffect","personService","initialNotes","preventDefault","personObject","length","find","newPersonObject","window","confirm","returnedPerson","setTimeout","concat","catch","error","res","x","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b7c0c119.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = (object) => {\n    const request = axios.delete(`${baseUrl}/${object.id}`)\n    return request.then(response => response.data)\n\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\n\nexport default { getAll, create, remove, update }","import React from 'react'\n\nconst Button = ({ onClick, person, text, persons }) => {\n  return (\n    <button onClick={() => onClick(person, persons)} >{text}</button>\n  )\n}\n\nconst NameList = ({ persons, handleDeleButton }) => {\n    return (\n      persons.map(person =>\n        <p key={person.id}>\n          {person.name + ' ' + person.number}\n          <Button\n            onClick={handleDeleButton}\n            person={person}\n            persons={persons}\n            text='Delete' />\n        </p>)\n    )\n  }\n\nexport default NameList","import React, { useState } from 'react'\n\n\n\nconst PersonForm = ({ addPerson }) => {\n\n    const [newName, setNewName] = useState('Add a name...')\n    const [newNumber, setNewNumber] = useState('Add phone number...')\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    return (\n        <form onSubmit={(event) => addPerson(event, newName, newNumber)}>\n            <div>\n                name: <input\n                    value={newName}\n                    onChange={handleNameChange}\n                />\n            </div>\n            <div>\n                number: <input\n                    value={newNumber}\n                    onChange={handleNumberChange}\n                />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default PersonForm\n\n","import React, { useState } from 'react'\n\n\n\nconst Filter = ({ onFilterChange, persons }) => {\n    const [newFilterName, setFilterName] = useState('')\n\n\n\n    const handleFilterChange = (event) => {\n        setFilterName(event.target.value)\n\n        if (event.target.value === '') {\n            console.log(\"empty search field\")\n            onFilterChange(persons)\n        }\n        else {\n            console.log(persons)\n            const newPersons = (persons.filter(persons => ((persons.name.toLocaleLowerCase()).includes(newFilterName.toLocaleLowerCase()))))\n            console.log(\"new filter PASSED\", newPersons)\n            onFilterChange(persons.filter(persons =>\n                ((persons.name.toLocaleLowerCase()).includes(event.target.value.toLocaleLowerCase()))))\n        }\n    }\n\n    return (\n        <form>\n            <div>\n                filter shown with: <input\n                    value={newFilterName}\n                    onChange={handleFilterChange}\n                />\n            </div>\n        </form>\n\n    )\n}\n\nexport default Filter","import React from 'react'\n\nconst Notification = ({ message, style}) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className={style}>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport NameList from './components/NameList'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\n\n\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [personsToShow, setPersonsToShow] = useState(persons)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [notificationStyle, setNotificationStyle] = useState('success')\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialNotes => {\n        setPersons(initialNotes)\n        setPersonsToShow(initialNotes) //there should be a way to update personsToShow every time Persons changes...\n      })\n  }, [])\n\n\n  const addPerson = (event, newName, newNumber) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    }\n\n    if ((persons.filter(person => (person.name === newName))).length !== 0) {\n      const person = (persons.find(person => person.name === newName))\n      console.log(person)\n      const newPersonObject = { ...person, number: newNumber }\n      console.log(\"name EXISTS already\")\n\n      if (window.confirm(`${person.name} has already been added to phonebook, replace the old number with a new one?`)) {\n        console.log(`replacing phonenumber of id ${person.id} with ${newNumber}`)\n        const id = person.id\n        personService\n          .update(id, newPersonObject).then(returnedPerson => {\n            setPersons(persons.map(person => person.id !== id ? person : returnedPerson))\n            setPersonsToShow(persons.map(person => person.id !== id ? person : returnedPerson))\n          })\n        setErrorMessage(\n          `Updated ${person.name}'s phone number`\n        )\n        setNotificationStyle('success')\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      }\n    }\n\n    else {\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setPersonsToShow(persons.concat(returnedPerson))\n          setErrorMessage(\n            `Added ${personObject.name} to phone book`\n          )\n          setNotificationStyle('success')\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n        })\n        .catch(error => {\n          console.log(error.response.data)\n          setErrorMessage(error.response.data)\n          setNotificationStyle('fail')\n          console.log(\"another error test\")\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n        })\n\n    }\n\n  }\n\n\n  const handleDeleButton = (person) => {\n    console.log(\"Deleting item with id\", person.id)\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personService\n        .remove(person)\n        .then(res => setPersons(persons => {\n          setPersons(persons.filter(x => x.id !== person.id))\n          setPersonsToShow(persons.filter(x => x.id !== person.id))\n        }))\n        .catch(error => {\n          setErrorMessage(\n            `${person.name} has already been removed from server`\n          )\n          setNotificationStyle('fail')\n          setTimeout(() => {\n            setErrorMessage(null)\n\n          }, 5000)\n          setPersons(persons.filter(x => x.id !== person.id))\n          setPersonsToShow(persons.filter(x => x.id !== person.id))\n        })\n      setErrorMessage(\n        `${person.name} has been removed from phonebook`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={errorMessage} style={notificationStyle} />\n      <Filter persons={persons} onFilterChange={setPersonsToShow} />\n      <h3>add a new person</h3>\n      <PersonForm addPerson={addPerson} />\n      <h3>Numbers</h3>\n      <NameList persons={personsToShow} handleDeleButton={handleDeleButton} />\n    </div>\n\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}